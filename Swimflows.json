[{"id":"ba60c5ae.4bc448","type":"function","z":"c6ec099b.d0a528","name":"Decodeur temperature","func":"//data are received as a table in msg.payload[]\n//to send temperature using topic to the chart\n//comment for GIT\n\n// test to verify the consistency of the payload\nflag01 = msg.payload[0];//expected value 01\nflag02 = msg.payload[3];//expected value 02\nflag03 = msg.payload[5];//expected value 03\nflag07 = msg.payload[9];//expected value 07\nflag0B = msg.payload[12];//expected value 0B hex or 11 decimal\nflag0F = msg.payload[17];//expected value 0F hex or 14 decimal\nflag14 = msg.payload[19];//expected value 14 hex or 20 decimal\nflag17 = msg.payload[24];//expected value 17 hex or 23 decimal\n \nif ((flag01 == 1) && (flag02 == 2) && (flag03 == 3) && (flag07 == 7) && (flag0B == 11)&& (flag0F == 15) && (flag14 == 20) && (flag17 == 23))  {\n    ptemperature = (msg.payload[1]*256 + msg.payload[2]);//degre x 10, to be divided by 10\n    var newMsg = {\"payload\": ptemperature/10};\n    return newMsg;\n} else {\n    //do nothing if the payload is not correct\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":400,"y":320,"wires":[["99946e32.43472","883fa50b.8d7ae8"]]}]